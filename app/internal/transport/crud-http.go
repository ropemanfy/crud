// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"crud/internal/interfaces"
	"github.com/gofiber/fiber/v2"
)

type httpCrud struct {
	errorHandler     ErrorHandler
	maxBatchSize     int
	maxParallelBatch int
	svc              *serverCrud
	base             interfaces.Crud
}

func NewCrud(svcCrud interfaces.Crud) (srv *httpCrud) {

	srv = &httpCrud{
		base: svcCrud,
		svc:  newServerCrud(svcCrud),
	}
	return
}

func (http *httpCrud) Service() *serverCrud {
	return http.svc
}

func (http *httpCrud) WithLog() *httpCrud {
	http.svc.WithLog()
	return http
}

func (http *httpCrud) WithTrace() *httpCrud {
	http.svc.WithTrace()
	return http
}

func (http *httpCrud) WithMetrics() *httpCrud {
	http.svc.WithMetrics()
	return http
}

func (http *httpCrud) WithErrorHandler(handler ErrorHandler) *httpCrud {
	http.errorHandler = handler
	return http
}

func (http *httpCrud) SetRoutes(route *fiber.App) {
	route.Post("/api/v1/users", http.serveCreate)
}
